(function ($) {
    var Slick = function (element, settings) {
        var _ = this;
        _.defaults = {
            // Aquí se definen las opciones predeterminadas
            autoplay: false,
            autoplaySpeed: 3000,
            slidesToShow: 1,
            slidesToScroll: 1,
            infinite: true,
            centerMode: false,
            arrows: true,
            dots: true,
            fade: false,
            useCSS: true,
            rtl: false,

        };
        _.options = $.extend({}, _.defaults, settings);
        _.init(element);
    };

    Slick.prototype.init = function (element) {
        var _ = this;
        _.element = $(element);
        _.element.addClass('slick-slider');

        // Inicialización del carrusel
        _.buildOut();
        _.setCSS();
        _.bindEvents();
        _.setSlideClasses(0);
    };

    Slick.prototype.buildOut = function () {
        var _ = this;
        _.slideTrack = $('<div class="slick-track"></div>');
        _.slides = _.element.children();
        _.slides.wrapAll('<div class="slick-slide"></div>');

        _.element.append(_.slideTrack);
        _.slideTrack.append(_.slides);
    };

    Slick.prototype.setCSS = function () {
        var _ = this;
        if (_.options.useCSS) {
            // Verificación de soporte de transiciones y transformaciones CSS
            var prefix = (function () {
                var prefixes = ['webkit', 'moz', 'ms', 'o', ''];
                for (var i = 0; i < prefixes.length; i++) {
                    if (typeof document.body.style[prefixes[i] + 'Transform'] !== 'undefined') {
                        return prefixes[i];
                    }
                }
            })();

            _.transformType = prefix + 'transform';
            _.transitionType = prefix + 'transition';
        }
    };

    Slick.prototype.bindEvents = function () {
        var _ = this;
        // Métodos de eventos de clic en las flechas y la navegación táctil
        if (_.options.arrows) {
            _.prevArrow = $('<button class="slick-prev">Previous</button>');
            _.nextArrow = $('<button class="slick-next">Next</button>');
            _.element.append(_.prevArrow).append(_.nextArrow);

            _.prevArrow.on('click', function () {
                _.changeSlide(-1);
            });

            _.nextArrow.on('click', function () {
                _.changeSlide(1);
            });
        }

        // Métodos de navegación con puntos
        if (_.options.dots) {
            _.dots = $('<ul class="slick-dots"></ul>');
            _.element.append(_.dots);

            for (var i = 0; i < _.slides.length; i++) {
                _.dots.append('<li><button>' + (i + 1) + '</button></li>');
            }

            _.dots.find('button').on('click', function () {
                var index = $(this).parent().index();
                _.goToSlide(index);
            });
        }
    };

    Slick.prototype.setSlideClasses = function (index) {
        var _ = this;
        _.slides.removeClass('slick-active slick-center slick-current');
        _.slides.eq(index).addClass('slick-current');
        if (_.options.centerMode) {
            _.slides.eq(index).addClass('slick-center');
        }
    };

    Slick.prototype.changeSlide = function (direction) {
        var _ = this;
        var currentIndex = _.slides.index(_.element.find('.slick-current'));
        var newIndex = currentIndex + direction;
        if (newIndex >= _.slides.length) {
            newIndex = 0;
        }
        if (newIndex < 0) {
            newIndex = _.slides.length - 1;
        }
        _.goToSlide(newIndex);
    };

    Slick.prototype.goToSlide = function (index) {
        var _ = this;
        _.setSlideClasses(index);
        // Aquí iría la lógica para animar la transición al nuevo slide
    };

    // Método principal para inicializar el plugin en el elemento
    $.fn.slick = function (options) {
        return this.each(function () {
            if (!$(this).data('slick')) {
                $(this).data('slick', new Slick(this, options));
            }
        });
    };
})(jQuery);
